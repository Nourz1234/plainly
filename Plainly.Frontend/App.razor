@inject ILocalStorageService LocalStorage

<MudThemeProvider IsDarkMode="IsDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<CascadingValue Value="this">
    <CascadingAuthenticationState>
        <Router AppAssembly="@typeof(App).Assembly">
            <Found Context="routeData">
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            </Found>
        </Router>
    </CascadingAuthenticationState>
</CascadingValue>

@code {
    public bool IsDarkMode { get; private set; }

    protected override async Task OnParametersSetAsync()
    {
        IsDarkMode = await LocalStorage.GetItemAsync<bool?>("isDarkMode") ?? true;
        await base.OnParametersSetAsync();
    }

    public async Task SetIsDarkModeAsync(bool isDarkMode)
    {
        IsDarkMode = isDarkMode;
        StateHasChanged();
        await LocalStorage.SetItemAsync<bool>("isDarkMode", isDarkMode);
    }
}
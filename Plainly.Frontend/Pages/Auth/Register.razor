@using Plainly.Shared.Actions.Auth.Register

@page "/Register"
@inherits AppComponent
@layout Layout.AuthLayout
@inject ApiService ApiService
@inject CurrentUserService CurrentUserService


<PageTitle>Register</PageTitle>

<MudText Typo="Typo.h5" Align="Align.Center">Register</MudText>

<EditForm Model="_RegisterForm" OnValidSubmit="Handle(OnSubmit)">
    <FluentValidationValidator />

    <MudStack>
        <TextField @bind-Value="_RegisterForm.FullName" />
        <TextField @bind-Value="_RegisterForm.Email" autocomplete="off" />
        <TextField @bind-Value="_RegisterForm.Password" type="password" autocomplete="new-password" />
        <TextField @bind-Value="_RegisterForm.ConfirmPassword" type="password" autocomplete="new-password" />
        <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Variant="Variant.Filled">Login</MudButton>
        <p>Already have an account? <MudLink href="/Login">Login</MudLink></p>
    </MudStack>
</EditForm>


@code {
    private RegisterForm _RegisterForm = new();

    private async Task OnSubmit(EditContext args)
    {
        var result = await ApiService.RegisterAsync(_RegisterForm);
        await CurrentUserService.SetCurrentUserAsync(result.Data.Token);
    }
}
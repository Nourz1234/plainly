@using Plainly.Shared.Actions.Auth.Register

@page "/Register"
@inherits AppComponent
@layout AuthLayout
@inject ApiService ApiService


<PageTitle>Register</PageTitle>

<MudText Typo="Typo.h5" Align="Align.Center">Register</MudText>

<EditForm Model="_RegisterForm" OnValidSubmit="OnSubmit">
    <FluentValidationValidator />

    <MudStack>
        <TextField @bind-Value="_RegisterForm.FullName" />
        <TextField @bind-Value="_RegisterForm.Email" autocomplete="off" />
        <TextField @bind-Value="_RegisterForm.Password" InputType="@InputType.Password" autocomplete="new-password" />
        <TextField @bind-Value="_RegisterForm.ConfirmPassword" InputType="@InputType.Password"
            autocomplete="new-password" />
        <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Variant="Variant.Filled">Register</MudButton>
        <MudText>
            Already have an account?
            <MudLink href="/Login">Login</MudLink>
        </MudText>
    </MudStack>
</EditForm>


@code {
    private RegisterForm _RegisterForm = new();

    private async Task OnSubmit(EditContext args)
    {
        var result = await ApiService.RegisterAsync(_RegisterForm);
        await CurrentUserService.SetCurrentUserAsync(result.Data.Token);
        Snackbar.Add(result.Message, Severity.Success);
    }
}
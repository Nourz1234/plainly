@using Plainly.Shared.Actions.Auth.Login

@page "/Login"
@inherits AppComponent
@layout Layout.AuthLayout
@inject CurrentUserService CurrentUserService
@inject ApiService ApiService


<PageTitle>Login</PageTitle>

<MudText Typo="Typo.h5" Align="Align.Center">Login</MudText>

<EditForm Model="_LoginForm" OnValidSubmit="Handle(OnSubmit)">
    <FluentValidationValidator />

    <MudStack>
        <TextField @bind-Value="_LoginForm.Email" />
        <TextField @bind-Value="_LoginForm.Password" InputType="@InputType.Password" />
        <CheckBoxField @bind-Value="_LoginForm.RememberMe" />
        <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Variant="Variant.Filled">Login</MudButton>
        <p>Don't have an account? <MudLink href="/Register">Register</MudLink></p>
    </MudStack>

</EditForm>


@code {
    private LoginForm _LoginForm = new();

    private async Task OnSubmit(EditContext args)
    {
        var result = await ApiService.LoginAsync(_LoginForm);
        await CurrentUserService.SetCurrentUserAsync(result.Data.Token);
        Snackbar.Add(result.Message, Severity.Success);
    }
}
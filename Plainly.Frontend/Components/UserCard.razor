@using Plainly.Shared.Actions.User.ViewProfile
@inherits AppComponent

<MudButton OnClick="OpenUserMenu" Color="Color.Inherit" Variant="Variant.Text" Class="rounded-lg">
    <MudStack Row AlignItems="AlignItems.Center">
        <MudAvatar Color="Color.Inherit">
            <MudIcon Icon="@Icons.Material.TwoTone.AccountCircle" />
        </MudAvatar>
        <MudStack Spacing="0" AlignItems="AlignItems.Start">
            <MudText>@CurrentUserService.FullName</MudText>
            <MudText Typo="Typo.caption">@CurrentUserService.Email</MudText>
        </MudStack>
    </MudStack>

    <MudMenu @bind-Open="_IsUserMenuOpen" Dense Class="absolute" Style="bottom: 0; right: 0">
        @if (CurrentUserService.CanPerformAction<ViewProfileAction>())
        {
            <MudMenuItem Icon="@Icons.Material.TwoTone.Person" Label="Profile" Href="/Profile" />
        }
        <MudDivider />
        <MudMenuItem Icon="@Icons.Material.TwoTone.Logout" Label="Logout" OnClick="OnLogout" />
    </MudMenu>
</MudButton>

@code {
    private bool _IsUserMenuOpen = false;

    private void OpenUserMenu()
    {
        _IsUserMenuOpen = true;
    }

    private async Task OnLogout()
    {
        await CurrentUserService.ClearCurrentUserAsync();
    }
}